
> react-typescript-starter@0.1.0 test
> react-scripts test --coverage

Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
PASS src/objects.test.ts
PASS src/arrays.test.ts
PASS src/nested.test.ts
PASS src/components/StartAttempt.test.tsx
PASS src/HtmlCss.test.tsx
PASS src/functions.test.ts
FAIL src/components/TwoDice.test.tsx
  ‚óè TwoDice Component tests ‚Ä∫ Clicking left button changes first number

    expect(jest.fn()).toBeCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 11

      52 |         leftButton.click();
      53 |         // Then the random function should be called 3 times
    > 54 |         expect(mathRandomFunction).toBeCalledTimes(3);
         |                                    ^
      55 |         // And the number to be 5
      56 |         const leftNumber = extractDigits(screen.getByTestId("left-die"));
      57 |         expect(leftNumber).toEqual(5);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:54:36)

  ‚óè TwoDice Component tests ‚Ä∫ Clicking right button changes second number

    expect(jest.fn()).toBeCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 11

      64 |         rightButton.click();
      65 |         // Then the random function should be called 3 times
    > 66 |         expect(mathRandomFunction).toBeCalledTimes(3);
         |                                    ^
      67 |         // And the number to be 5
      68 |         const rightNumber = extractDigits(screen.getByTestId("right-die"));
      69 |         expect(rightNumber).toEqual(5);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:66:36)

  ‚óè TwoDice Component tests ‚Ä∫ Rolling two different numbers does not win or lose the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: 5

      82 |         const leftNumber = extractDigits(leftDie);
      83 |         const rightNumber = extractDigits(rightDie);
    > 84 |         expect(leftNumber).toEqual(1);
         |                            ^
      85 |         expect(rightNumber).toEqual(6);
      86 |         // And then the game is not won
      87 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:84:28)

  ‚óè TwoDice Component tests ‚Ä∫ Getting snake eyes loses the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: 5

      106 |         const leftNumber = extractDigits(leftDie);
      107 |         const rightNumber = extractDigits(rightDie);
    > 108 |         expect(leftNumber).toEqual(1);
          |                            ^
      109 |         expect(rightNumber).toEqual(1);
      110 |         // And then the game is not won
      111 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:108:28)

  ‚óè TwoDice Component tests ‚Ä∫ Getting matching numbers wins the game

    expect(received).toEqual(expected) // deep equality

    Expected: 5
    Received: 4

      129 |         const leftNumber = extractDigits(leftDie);
      130 |         const rightNumber = extractDigits(rightDie);
    > 131 |         expect(leftNumber).toEqual(5);
          |                            ^
      132 |         expect(rightNumber).toEqual(5);
      133 |         // And then the game is not lost
      134 |         const loseText = screen.queryByText(/Lose/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:131:28)

PASS src/components/ChangeType.test.tsx
PASS src/components/Counter.test.tsx
FAIL src/components/CycleHoliday.test.tsx
  ‚óè Console

    console.error
      Warning: Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.
          at p
          at div
          at CycleHoliday (/home/runner/work/tasks/tasks/src/components/CycleHoliday.tsx:14:9)

      at printWarning (node_modules/react-dom/cjs/react-dom.development.js:67:30)
      at error (node_modules/react-dom/cjs/react-dom.development.js:43:5)
      at warnOnFunctionType (node_modules/react-dom/cjs/react-dom.development.js:13247:5)
      at createChild (node_modules/react-dom/cjs/react-dom.development.js:13474:9)
      at reconcileChildrenArray (node_modules/react-dom/cjs/react-dom.development.js:13719:25)
      at reconcileChildFibers (node_modules/react-dom/cjs/react-dom.development.js:14125:14)
      at reconcileChildren (node_modules/react-dom/cjs/react-dom.development.js:16990:28)
      at updateHostComponent (node_modules/react-dom/cjs/react-dom.development.js:17632:3)

  ‚óè CycleHoliday Component tests ‚Ä∫ An initial holiday is displayed

    TestingLibraryElementError: Unable to find an element with the text: /Holiday: (.*)/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<p>[39m
            [0mHoliday: [0m
          [36m</p>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mAdvance by Alphabet[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"btn btn-primary"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mAdvance by Year[0m
          [36m</button>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       9 |
      10 |     test("An initial holiday is displayed", () => {
    > 11 |         const initialHoliday = screen.getByText(/Holiday: (.*)/i);
         |                                       ^
      12 |         expect(initialHoliday).toBeInTheDocument();
      13 |     });
      14 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/components/CycleHoliday.test.tsx:11:39)

  ‚óè CycleHoliday Component tests ‚Ä∫ Can cycle through 5 distinct holidays alphabetically

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 1
    Received array:  ["Holiday: "]

      35 |         }
      36 |         const uniqueStates = states.filter((x, y) => states.indexOf(x) == y);
    > 37 |         expect(uniqueStates).toHaveLength(5);
         |                              ^
      38 |         expect(states[0]).toEqual(states[5]);
      39 |     });
      40 |

      at Object.<anonymous> (src/components/CycleHoliday.test.tsx:37:30)

  ‚óè CycleHoliday Component tests ‚Ä∫ Can cycle through 5 distinct holidays by year

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 1
    Received array:  ["Holiday: "]

      50 |         }
      51 |         const uniqueStates = states.filter((x, y) => states.indexOf(x) == y);
    > 52 |         expect(uniqueStates).toHaveLength(5);
         |                              ^
      53 |         expect(states[0]).toEqual(states[5]);
      54 |     });
      55 | });

      at Object.<anonymous> (src/components/CycleHoliday.test.tsx:52:30)

PASS src/components/RevealAnswer.test.tsx
PASS src/text.test.tsx
PASS src/App.test.tsx
-------------------|---------|----------|---------|---------|-------------------
File               | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-------------------|---------|----------|---------|---------|-------------------
All files          |   94.85 |    87.36 |   98.93 |   94.55 |                   
 src               |   98.69 |    96.22 |     100 |   98.58 |                   
  App.tsx          |     100 |      100 |     100 |     100 |                   
  arrays.ts        |     100 |      100 |     100 |     100 |                   
  functions.ts     |     100 |      100 |     100 |     100 |                   
  nested.ts        |    98.5 |    94.11 |     100 |   98.41 | 282               
  objects.ts       |   95.45 |       90 |     100 |   95.45 | 90                
 src/components    |   85.24 |    76.19 |   94.44 |   85.24 |                   
  ChangeType.tsx   |     100 |      100 |     100 |     100 |                   
  Counter.tsx      |     100 |      100 |     100 |     100 |                   
  CycleHoliday.tsx |   73.52 |    64.28 |      75 |   73.52 | 45-54             
  RevealAnswer.tsx |     100 |      100 |     100 |     100 |                   
  StartAttempt.tsx |     100 |      100 |     100 |     100 |                   
  TwoDice.tsx      |     100 |      100 |     100 |     100 |                   
 src/interfaces    |       0 |        0 |       0 |       0 |                   
  answer.ts        |       0 |        0 |       0 |       0 |                   
  question.ts      |       0 |        0 |       0 |       0 |                   
-------------------|---------|----------|---------|---------|-------------------

Test Suites: 2 failed, 11 passed, 13 total
Tests:       8 failed, 93 passed, 101 total
Snapshots:   0 total
Time:        5.558 s
Ran all test suites.
